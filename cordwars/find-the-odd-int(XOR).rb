# 課題: 整数からなるリストが与えられます。リストに奇数個しか含まれない要素がただ一つあります。それを求めなさい。
# 入出力例: find_it([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5]) -> 5 (5以外の要素はどれも偶数個含まれている)

def find_it_a(arr)
  arr.each do |i|
    if arr.count(i).odd?
      return i
    end
  end
end

def find_it(arr)
  # ビット単位排他的論理和をa ^ bとして計算することができる
  # 以下の性質を持つ

  # a ^ b は b ^ a と等しい
  # (a ^ b) ^ c は a ^ (b ^ c) と等しい
  # a ^ b ^ b は a と等しい => 偶数回だけ含まれる要素は0になって消える(この場合は'b')
  # 与えられたリストの要素に対して左から右に累積的にビット単位排他的論理和を計算すると
  # 偶数回だけ含まれる要素は0になって消え、奇数回だけ含まれる要素の値が残る
  # 奇数回の要素が複数ある場合は、残った要素のXORが取られる
  # この問題では奇数回の要素が一つだけしか含まれていないためできる技
  arr.inject(:^)
end

p find_it([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5])
