# 日本でよく使われる紙幣は、10000円札、5000円札、1000円札です。以下、「お札」とはこれらのみを指します。

# 青橋くんが言うには、彼が祖父から受け取ったお年玉袋にはお札がN枚入っていて、
# 合計でY円だったそうですが、嘘かもしれません。
# このような状況がありうるか判定し、ありうる場合はお年玉袋の中身の候補を一つ見つけてください。
# なお、彼の祖父は十分裕福であり、お年玉袋は十分大きかったものとします

# 制約
# 1 ≤ N ≤ 2000
# 1000 ≤ Y ≤ 2*10^7
# Nは整数
# Yは1000の倍数

# 入力
# N Y

# 出力
# N枚のお札の合計金額がY円となることがあり得ない場合は、'-1 -1 -1'と出力
# あり得る場合は組み合わせの一例を出力「10000円札x枚、5000円札y枚、1000円札z枚」
# 複数の可能性が考えられるときは、そのうちどれを出力してもよい。

# 例１
# 9 45000
# 出力例１
# 4 0 5(5000円札9枚の可能性もあるので'0 9 0'も可)

n, total = gets.split.map(&:to_i)
ans_x, anx_y, ans_z = -1, -1, -1

# 適切にループの制御を行わないと計算量オーダーが大きくなりすぎる
(0..n).each do |x|
  (0..n-x).each do |y|
    z = n - x - y
    if 10000*x + 5000*y + 1000*z == total
      ans_x, anx_y, ans_z = x, y, z
    end
  end
end

puts "#{ans_x} #{anx_y} #{ans_z}"

# 下は悪例
# このとき調べる場合の数は (N+1)^3 通りになる。今、N としてありうる最大値は 2000
# 2000^3=8,000,000,000通りも調べることになる。
# 1 秒間で処理できる for 文ループの回数は、10^8=100,000,000回程度
# 制限時間2秒以内に間に合わない

# (0..n).each do |x|
#   (0..n).each do |y|
#     (0..n).each do |z|
#       if 10000*x + 5000*y + 1000*z == total && x+y+z == n
#         ans_x, anx_y, ans_z = x, y, z
#       end
#     end
#   end
# end
